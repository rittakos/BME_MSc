#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(std430, binding = 0) buffer positionBuffer
{
	vec4 position[];
};

layout(std430, binding = 1) buffer positionTempBuffer
{
	vec4 positionTemp[];
};

layout(std430, binding = 2) buffer velocityBuffer
{
	vec4 velocity[];
};

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;


const float constraintWeight = 0.9f;
const float r = 0.5f;
const vec4 center = vec4(0.0f, -1.0f, 0.0f, 1.0f);

void main()
{
	uint gid = gl_GlobalInvocationID.x * 64 + gl_GlobalInvocationID.y;

	float d = distance(center, positionTemp[gid]);

	if(d < r)
	{
		vec4 surfacePos = center + normalize(positionTemp[gid] - center) * r;
		positionTemp[gid] += (surfacePos - positionTemp[gid]) * constraintWeight;
	}
}